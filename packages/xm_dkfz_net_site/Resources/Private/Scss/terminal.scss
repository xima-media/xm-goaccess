@import 'sanitize.css/sanitize';
@import 'sanitize.css/assets';
@import 'sanitize.css/typography';
@import 'sanitize.css/ui-monospace';

@import "components/basic-variables--scss";

@font-face {
    font-family: 'The Serif';
    font-weight: 700;
    font-style: normal;
    src: url('../../Fonts/the-serif/the-serif--bold-subset.woff2') format('woff2');
    unicode-range: U+0020-007F, U+00A0-00FF, U+0100-017F;
    font-display: swap;
}

@each $name, $value in $colors {
    :root {
        --color-#{$name}: #{$value};
    }
    .color--#{$name} {
        --color: #{$value};
    }
}

body {
    font-family: 'The Sans', sans-serif;
    color: #111;
    height: 100vh;
}

.header {

    display: grid;
    padding: 5vw;

    &__logo {
        justify-self: center;
        color: var(--color-primary);
        padding: 0;
        width: 100%;
        max-width: 40vw;
        margin: 0;

    }
}

h2 {
    font-size: 6vw;
    line-height: 1.2;
    font-family: 'The Serif', serif;
    color: #00186E;
}

p {
    font-size: 3vw;
    line-height: 1.8;
}

.terminal-slider {
    overflow: hidden;
    margin: 10vw 0 0 0;

    &__wrapper {
        display: grid;
        width: calc(var(--count) * 100vw);
        grid-template-columns: repeat(var(--count), 1fr);
        --translateX: calc(var(--current) * -100vw);
        transform: translate3d(var(--translateX), 0, 0);
    }

    &__item {
        padding: 7vw 10vw;
        position: relative;
        overflow: hidden;

        &:after {
            --pattern-size: 0.66vw;
            content: '';
            width: 45vw;
            height: 80vw;
            display: block;
            position: absolute;
            left: 0;
            top: 0;
            background-repeat: repeat;
            background-color: transparent;
            background-size: var(--pattern-size) var(--pattern-size);
            background-image: linear-gradient(-45deg, var(--color, #0047b9) 10%, transparent 10%, transparent 50%, var(--color, #0047b9) 50%, var(--color, #0047b9) 60%, transparent 60%, transparent 100%);
            z-index: -1;
            transition: opacity 0.3s ease 0.2s;
        }

    }

    &__placeholder {
        height: 10vw;
    }

    &__text {
        margin-left: 7vw;

        h2, p {
            transition: transform 0.4s ease 0.3s, opacity 0.3s ease 0.4s;
        }

        p {
            transition-delay: 0.35s, 0.45s;
        }
    }

    img {
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
        transition: clip-path 0.3s ease, transform 0.2s ease;
    }

    &.animation {

        .terminal-slider__item:after {
            opacity: 0;
        }

        img {
            clip-path: polygon(75% 0%, 75% 0%, 25% 100%, 25% 100%);
        }

        h2, p {
            transform: translate3d(-100px, 0px, 0);
            opacity: 0;
            transition: transform 0.6s ease 0.1s, opacity 0.4s ease 0s;
        }

    }
}

@keyframes progressIndicator {
    0% {
        box-shadow: inset 0 0 0 var(--color-primary);
    }
    100% {
        box-shadow: inset 100vw 0 0 var(--color-primary);
    }
}

#terminal-progress-bar {
    width: 100vw;
    height: 2.5vw;
    position: fixed;
    bottom: 0;
    left: 0;
    --start: 1.2s;

    &.run {
        animation: progressIndicator calc(var(--timer) - var(--start) - 1s) linear;
        animation-fill-mode: both;
        animation-delay: var(--start);
    }
}
