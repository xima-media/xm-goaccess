//
//    @tableOfContent
//      1. Basic
//      2. Startpage layout
//


//
//   @section 1. Basic
//

html {
    overflow-x: hidden;
    overflow-y: scroll;
}

body {
    font-family: $font-family-sans-serif;
    font-weight: 200;
    font-variant-numeric: oldstyle-nums;
    background-color: transparent; // @todo die bootstrap variable überschreiben
}

.app {
    display: flex;
    flex-direction: column;
    position: relative;
    z-index: 1;
    max-width: $container-expand-widths + 1rem;
    min-height: 100vh;
    margin: 0 auto;
    padding-right: .5rem;
    padding-left: .5rem;
}

// @todo eventuell auslagern
.main {
    &--default {
        max-width: $container-default-widths;
        margin: auto;

        &__center {
            display: flex;
            justify-content: center;
        }
    }

    &--column__two {
        max-width: $container-default-widths;
        margin: 2.5rem auto;
        display: flex;
        justify-content: space-between;
        gap: 2.75rem;

        @include media-breakpoint-down(md) {
            flex-wrap: wrap;
        }
    }

    &--with-sidebar {
        display: grid;
        grid-template-columns: 1fr 20rem;
        max-width: $container-default-widths + 2rem;
        margin: auto;

        // @todo umbennen
        .testblubb {
            position: relative;
            padding-top: 2rem;
            padding-bottom: 2rem;
            background-color: var(--color-white);

            &::after {
                content: '';
                position: absolute;
                top: 0;
                right: -31.875rem;
                bottom: 0;
                left: -11.875rem;
                z-index: -1;
                background-color: inherit;
            }
        }
    }
}

// @todo eventuell auslagern
.article {
    padding: 0 7rem;
}

// @todo eventuell auslagern
.sidebar {
    background-color: var(--color-primary-opacity-10);

    &__header {
        padding: 1rem;
        color: var(--color-white);
        background-color: var(--color-primary);
    }

    &__body {
        padding: 1rem;
    }
}


//
//   @section 2. Startpage layout
//

.layout {
    // https://stackoverflow.com/questions/55851493/break-out-with-css-grid
    display: grid;
    grid-template-columns:
        [full-start] minmax(0, 1fr)
        [main-start] minmax(0, $container-default-widths)
        [main-end] minmax(0, 1fr)
        [full-end];
    gap: 2rem 0;
    margin: auto;
    padding-top: 5rem; // @todo variable
    padding-bottom: 4rem; // @todo variable > selbe Zahl wie gap

    @include media-breakpoint-up(lg) {
        gap: 4rem;
    }

    &__item {
        grid-column: main;
        position: relative;

        &.fx--expanded {
            grid-column: full;
        }

        &.background--expanded {
            background-color: transparent;

            &::after {
                top: -6rem;
                bottom: -6rem;

                @include media-breakpoint-up(lg) {
                    top: -9rem;
                    bottom: -9rem;
                }
            }
        }

        &.background--orange {
            &::after {
                background-color: rgba($color-orange, .75);
            }
        }

        &.background--yellow {
            &::after {
                background-color: rgba($color-yellow, .75);
            }
        }

        &.background--cyan {
            &::after {
                background-color: rgba($color-cyan, .75);
            }
        }

        &.background--image {
            background-size: 0; // hide image

            &::after {
                background-image: inherit;
                background-position: 50% 50%;
                background-size: cover;
                transform: translateX(-50%);
            }
        }
    }
}

// @todo umbennen
[class*="foo--"] {
    display: grid;
    gap: 2rem;
}

.foo--50-50 {
    @include media-breakpoint-up(lg) {
        grid-template-columns: 1fr 1fr;
    }
}

.foo--75-25 {
    @include media-breakpoint-up(lg) {
        grid-template-columns: 2fr 1fr;
    }
}

.foo--25-75 {
    @include media-breakpoint-up(lg) {
        grid-template-columns: 1fr 2fr;
    }
}

// @todo umbennen
.bar {
    position: relative;
    z-index: 1;
    padding: .75rem;
    background-color: rgba(255,255,255,.8); // @todo variable
    backdrop-filter: blur(20px); // @todo variable

    @include media-breakpoint-up(md) {
        padding: 2.75rem;
    }

    &--main-hero {
        .bar {
            &__header {  }

            &__footer {
                display: grid;
                gap: 2rem;
                max-width: $container-default-widths;
                margin: auto;

                @include media-breakpoint-up(lg) {
                    //grid-template-columns: 1fr 1fr;
                    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
                }

                .content-wrapper {
                    &:last-child {
                        @include media-breakpoint-up(lg) {
                            margin-left: 6.25rem;
                        }
                    }
                }
            }
        }
    }
}

// @todo in eigene Komponente auslagern
a {
    color: inherit; // mit bootstrap lösen
    text-decoration: none;
}

.link {
    &--secondary {
        @include link-secondary;
    }

    &--arrow-right {
        text-decoration: none;

        // @todo siehe css icon in icon-Komponente
        &::after {
            @include size($css-icon-size);

            content: '';
            display: inline-block;
            margin-left: .5rem;
            background-image: url(map-get($sprites, 'arrow-right'));
            background-position: 0 ($css-icon-size * -1);
            background-repeat: no-repeat;
            background-size: cover;
            //filter: invert(1);
        }
    }

    &--primary {
        @include link-primary;
        display: block;

        .icon {
            @include size(.75rem, .75rem);
        }

        &-angle {
            @include link-primary--angle;
        }
    }
}

.link--primary + .link--primary {
    margin-top: 1rem;
}

// @todo aufräumen > für footer
ul > li {
    list-style: none;
}

.list-inline {
    display: inline-flex;

    li {
        margin-right: 1rem;
    }
}

// @todo umbennen bzw so bauen das es generischere funktioniert
.list-view {
    padding-right: 4rem;
    padding-left: 4.25rem;
}

// @todo entfernen > Klasse "visually-hidden" verwenden
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// @todo eigene Komponente erstellen und erweitern, eventuell auch umbennen
.badge {
    display: inline-flex;
    padding: .25rem .5rem;
    font-family: $font-family-sans-serif;
    font-size: 16px;
    line-height: 1;
    letter-spacing: .6px;
    color: var(--color-white);
    background-color: var(--color-black);
}

.column--text {
    width: 39.375rem;

    @include media-breakpoint-down(md) {
        width: 100%;
    }
}

.spacing {
    &--bottom {
        margin-bottom: 1.5rem;
    }

    &--block {
        margin-bottom: 1rem;

        @include media-breakpoint-up(lg) {
            margin-bottom: 5rem;
        }
    }
}

// @todo verschieben
.results {
    padding-top: 3rem;
    padding-bottom: 3rem;
    background-color: var(--color-white);

    &__title,
    &__items {
        width: 100%;
        max-width: $container-default-widths;
        margin-right: auto;
        margin-left: auto;
    }

    &__title {
        @include h6;
    }

    &__items {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;

        @include media-breakpoint-up(md) {
            grid-template-columns: 1fr 1fr;
        }

        @include media-breakpoint-up(lg) {
            grid-template-columns: 1fr 1fr 1fr;
        }
    }
}

// end of basic.scss file
