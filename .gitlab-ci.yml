image: composer:latest
cache:
  paths:
    - .composer-cache/
before_script:
  - composer config -g cache-dir "$(pwd)/.composer-cache"

stages:
  - build
  - test
  - provision
  - deploy
  - sync

build-php:
  stage: build
  script:
    - composer install --ignore-platform-reqs --optimize-autoloader --no-ansi --no-interaction --no-progress
  artifacts:
    paths:
      - vendor/
    expire_in: 1 day

build-node:
  stage: build
  image: misterio92/ci-php-node
  cache:
    paths:
      - .npm/
  before_script: [ ]
  script:
    - npm ci --unsafe-perm
    - npm run build
    - npm run build:patternlab
  artifacts:
    paths:
      - packages/xm_dkfz_net_prototype/Resources/Public
    expire_in: 1 day

test-php-lint:
  stage: test
  script:
    - composer run ci:php:lint

test-php-cs-fixer:
  stage: test
  needs: [ "build-php" ]
  script:
    - composer run ci:php:fixer

test-php-stan:
  stage: test
  needs: [ "build-php" ]
  script:
    - composer run ci:php:stan

.deploy-prepare:
  stage: deploy
  needs: [ "build-php" ]
  before_script:
    - apk add --update --quiet rsync gzip
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $TYPO3_STAGING_URL >> ~/.ssh/known_hosts
    - if [[ ! -z "$TYPO3_PRODUCTION_URL" ]]; then ssh-keyscan $TYPO3_PRODUCTION_URL >> ~/.ssh/known_hosts; fi
    - chmod 644 ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n\n" > ~/.ssh/config

deploy-dev-t3-debian11-01:
  extends: .deploy-prepare
  needs: [ "build-php", "build-node", "test-php-lint", "test-php-cs-fixer", "test-php-stan", "provision-environment" ]
  stage: deploy
  only:
    refs:
      - "master"
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
  script:
    - vendor/bin/dep deploy:unlock dev-t3-debian11-01
    - vendor/bin/dep deploy dev-t3-debian11-01 -vvv

deploy-dkfz-staging:
  extends: .deploy-prepare
  needs: [ "build-php", "build-node" ]
  stage: deploy
  rules:
    - if: $IS_SCHEDULED_BACKUP == "true"
      when: never
    - if: $CI_COMMIT_BRANCH == "master" && $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep deploy:unlock staging-dkfz
    - vendor/bin/dep deploy-fast staging-dkfz -vvv

deploy-dkfz-production:
  extends: .deploy-prepare
  needs: [ "build-php", "build-node", "test-php-lint", "test-php-cs-fixer", "test-php-stan" ]
  stage: deploy
  rules:
    - if: $IS_SCHEDULED_BACKUP == "true"
      when: never
    - if: $CI_COMMIT_BRANCH == "master" && $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep deploy:unlock production-dkfz
    - vendor/bin/dep deploy production-dkfz -vvv

reset-staging-dkfz:
  extends: .deploy-prepare
  needs: [ "build-php", "backup-production-dkfz" ]
  stage: sync
  only:
    variables:
      - $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - apk add --update --quiet php
    - vendor/bin/dep db:rmdump staging-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction
    - vendor/bin/dep db:upload staging-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction
    - vendor/bin/dep db:decompress staging-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction
    - vendor/bin/dep db:import staging-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction
    - vendor/bin/dep media:push  staging-dkfz --no-interaction -vvv
  when: manual

backup-production-dkfz:
  extends: .deploy-prepare
  stage: sync
  only:
    variables:
      - $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep db:export production-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction
    - vendor/bin/dep db:download production-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction
    - vendor/bin/dep db:process --options=dumpcode:BackupProductionDkfz --no-interaction
    - vendor/bin/dep db:compress --options=dumpcode:BackupProductionDkfz --no-interaction
    - vendor/bin/dep media:pull production-dkfz --no-interaction
  artifacts:
    paths:
      - .dep/database
      - public/fileadmin
      - public/uploads
    expire_in: 1 day

reset:dev-t3-debian11-01:
  extends: .deploy-prepare
  stage: sync
  only:
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
  when: manual
  script:
    - vendor/bin/dep reset:from_production_artifact -o DKFZ_ACCESS_TOKEN=$DKFZ_ACCESS_TOKEN dev-t3-debian11-01 --no-interaction

provision-environment:
  stage: provision
  only:
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
  variables:
    project_webserver: "t3-debian11-01"
    project_database: "t3-mariadb10-5-01"
    project_name: $CI_PROJECT_NAME
    project_environment: "dev"
    project_branch: "master"
    project_aliases: "handbuch"
    project_php_version: "8.1"
    project_is_fbd: "false"
    project_goaccess: "true"
    project_mailhog: "true"
  trigger:
    project: systemadministration/sys-t3-ansible-management
    strategy: depend

#deploy-feature:
#  extends: .deploy-prepare
#  only:
#    refs:
#      - "/^DKFZ-.*$/"
#    variables:
#      - $GITLAB_LOCATION == "XIMA-INTERN"
#  script:
#    - vendor/bin/dep deploy-fast feature -o branch=$CI_COMMIT_BRANCH
