image: composer:latest
cache:
  paths:
    - .composer-cache/
before_script:
  - composer config -g cache-dir "$(pwd)/.composer-cache"

stages:
  - build
  - test
  - deploy
  - sync

build-php:
  stage: build
  script:
    - composer install --ignore-platform-reqs --optimize-autoloader --no-ansi --no-interaction --no-progress
  artifacts:
    paths:
      - vendor/

build-node:
  stage: build
  image: misterio92/ci-php-node
  cache:
    paths:
      - .npm/
  before_script: [ ]
  script:
    - npm ci --unsafe-perm
    - npm run build
    - npm run build:patternlab
  artifacts:
    paths:
      - packages/xm_dkfz_net_prototype/Resources/Public

test-php-lint:
  stage: test
  script:
    - composer run ci:php:lint

test-php-cs-fixer:
  stage: test
  needs: [ "build-php" ]
  script:
    - composer run ci:php:fixer

test-php-stan:
  stage: test
  needs: [ "build-php" ]
  script:
    - composer run ci:php:stan

.deploy-prepare:
  stage: deploy
  needs: [ "build-php", "build-node", "test-php-lint", "test-php-cs-fixer", "test-php-stan" ]
  before_script:
    - apk add --quiet rsync
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $TYPO3_STAGING_URL >> ~/.ssh/known_hosts
    - if [[ ! -z "$TYPO3_PRODUCTION_URL" ]]; then ssh-keyscan $TYPO3_PRODUCTION_URL >> ~/.ssh/known_hosts; fi
    - chmod 644 ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n\n" > ~/.ssh/config

deploy-xima-staging:
  extends: .deploy-prepare
  stage: deploy
  only:
    refs:
      - "master"
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
  script:
    - vendor/bin/dep deploy-fast staging

deploy-dkfz-staging:
  extends: .deploy-prepare
  stage: deploy
  only:
    refs:
      - "master"
    variables:
      - $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep deploy:unlock staging-dkfz
    - vendor/bin/dep deploy-fast staging-dkfz

deploy-dkfz-production:
  extends: .deploy-prepare
  stage: deploy
  only:
    refs:
      - "master"
    variables:
      - $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep deploy:unlock production-dkfz
    - vendor/bin/dep deploy production-dkfz

sync-dkfz-db-stage-to-production:
  extends: .deploy-prepare
  stage: sync
  only:
    variables:
      - $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep db:pull staging-dkfz
  when: manual

sync-dkfz-media-stage-to-production:
  extends: .deploy-prepare
  stage: sync
  only:
    variables:
      - $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep media:pull staging-dkfz
  when: manual

deploy-feature:
  extends: .deploy-prepare
  only:
    refs:
      - "/^DKFZ-.*$/"
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
  script:
    - vendor/bin/dep deploy-fast feature -o branch=$CI_COMMIT_BRANCH
