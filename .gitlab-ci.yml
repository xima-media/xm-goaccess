image:
  name: composer:2.4.4
  pull_policy: if-not-present
cache:
  paths:
    - .composer-cache/
before_script:
  - composer config -g cache-dir "$(pwd)/.composer-cache"

stages:
  - build
  - test
  - provision
  - deploy
  - sync

build-php:
  stage: build
  script:
    - composer install --ignore-platform-reqs --optimize-autoloader --no-ansi --no-interaction --no-progress
  artifacts:
    paths:
      - vendor/
    expire_in: 1 day

build-node:
  stage: build
  image:
    name: node:16
    pull_policy: if-not-present
  cache:
    paths: []
  before_script: [ ]
  script:
    - npm ci --unsafe-perm
    - npm run build
  artifacts:
    paths:
      - packages/xm_dkfz_net_site/Resources/Public/Css/dist
      - packages/xm_dkfz_net_site/Resources/Public/JavaScript/dist
    expire_in: 1 day

test-php-lint:
  stage: test
  script:
    - composer run ci:php:lint

test-php-cs-fixer:
  stage: test
  needs: [ "build-php" ]
  script:
    - composer run ci:php:fixer

test-php-stan:
  stage: test
  needs: [ "build-php" ]
  script:
    - composer run ci:php:stan

.deploy-prepare:
  stage: deploy
  needs: [ "build-php" ]
  before_script:
    - export no_proxy=localhost && export noproxy=localhost
    - apk add --update --quiet rsync gzip
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo $SSH_KEYSCAN_REMOTES | xargs -d ',' ssh-keyscan >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking yes\n\tUserKnownHostsFile=~/.ssh/known_hosts\n\n" > ~/.ssh/config

deploy-dkfz-staging:
  extends: .deploy-prepare
  needs: [ "build-php", "build-node" ]
  stage: deploy
  environment:
    name: DKFZ Stage
    url: https://intranetstage.dkfz.de/
  rules:
    - if: $IS_SCHEDULED_BACKUP == "true"
      when: never
    - if: $CI_COMMIT_BRANCH == "master" && $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep deploy:unlock staging-dkfz
    - vendor/bin/dep deploy-fast staging-dkfz -vvv

deploy-dkfz-production:
  extends: .deploy-prepare
  needs: [ "build-php", "build-node", "test-php-lint", "test-php-cs-fixer", "test-php-stan" ]
  stage: deploy
  when: manual
  environment:
    name: DKFZ Live
    url: https://intranet.dkfz.de/
  rules:
    - if: $IS_SCHEDULED_BACKUP == "true"
      when: never
    - if: $CI_COMMIT_BRANCH == "master" && $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep deploy:unlock production-dkfz
    - vendor/bin/dep deploy production-dkfz -vvv

reset-staging-dkfz:
  extends: .deploy-prepare
  needs: [ "build-php", "backup-production-dkfz" ]
  stage: sync
  only:
    variables:
      - $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep reset:from_production_artifact -o DKFZ_ACCESS_TOKEN=$DKFZ_ACCESS_TOKEN staging-dkfz --no-interaction
  when: manual

backup-production-dkfz:
  extends: .deploy-prepare
  stage: sync
  only:
    variables:
      - $GITLAB_LOCATION == "DKFZ-INTERN"
  script:
    - vendor/bin/dep db:export production-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction -vvv
    - vendor/bin/dep db:process production-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction -vvv
    - vendor/bin/dep db:compress production-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction -vvv
    - vendor/bin/dep db:download production-dkfz --options=dumpcode:BackupProductionDkfz --no-interaction -vvv
    - vendor/bin/dep media:pull production-dkfz --no-interaction
  artifacts:
    paths:
      - .dep/database
      - public/fileadmin
      - public/uploads
    expire_in: 1 day

reset:xima-staging:
  extends: .deploy-prepare
  stage: sync
  only:
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
  when: manual
  script:
    - vendor/bin/dep reset:from_production_artifact -o DKFZ_ACCESS_TOKEN=$DKFZ_ACCESS_TOKEN dev-t3-debian11-01-${CI_COMMIT_BRANCH,,} --no-interaction

variables:
  BASE_BRANCH: "master"

.provision-variables:
  variables:
    project_webserver: "t3-debian11-01"
    project_database: "t3-mariadb10-5-01"
    project_name: $CI_PROJECT_NAME
    project_environment: "dev"
    project_branch: $CI_COMMIT_BRANCH
    project_base_branch: $BASE_BRANCH
    project_aliases: "handbuch"
    project_php_version: "8.1"
    project_goaccess: "true"
    project_mailhog: "true"
    project_redis: "false"
    project_scheduler_frequency_minutes: "15"
    project_delete: "false"
    downstream_pipeline_branch: major-1.x.x

provision-environment:
  extends: .provision-variables
  trigger:
    project: systemadministration/sys-t3-ansible-management
    branch: $downstream_pipeline_branch
    strategy: depend
  stage: provision
  only:
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
    refs:
      - "master"
      - "/^DKFZ-.*$/"

teardown-environment:
  extends: .provision-variables
  stage: provision
  environment:
    name: $CI_COMMIT_BRANCH
    action: stop
  when: manual
  only:
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
  script:
    - 'curl --request POST --form token=$CI_JOB_TOKEN --form ref="$downstream_pipeline_branch" --form variables[project_redis]="$project_redis" --form variables[project_mailhog]="$project_mailhog" --form variables[project_scheduler_frequency_minutes]="$project_scheduler_frequency_minutes" --form variables[project_goaccess]="$project_goaccess" --form variables[project_php_version]="$project_php_version" --form variables[project_aliases]="$project_aliases" --form variables[project_database]="$project_database" --form variables[project_webserver]="$project_webserver" --form variables[project_environment]="$project_environment" --form variables[project_delete]="true" --form variables[project_name]="$project_name" --form variables[project_branch]="$project_branch" --form variables[project_base_branch]="$project_base_branch" $CI_API_V4_URL/projects/1092/trigger/pipeline'

deploy-xima-staging:
  environment:
    name: $CI_COMMIT_BRANCH
    url: https://$CI_COMMIT_BRANCH.dev.$CI_PROJECT_NAME.xima.dev
    on_stop: teardown-environment
  stage: deploy
  extends: .deploy-prepare
  needs: [ "build-php", "build-node", "test-php-lint", "test-php-cs-fixer", "test-php-stan", "provision-environment" ]
  only:
    refs:
      - "master"
      - "/^DKFZ-.*$/"
    variables:
      - $GITLAB_LOCATION == "XIMA-INTERN"
  script:
    - vendor/bin/dep deploy:unlock dev-t3-debian11-01-${CI_COMMIT_BRANCH,,}
    - vendor/bin/dep deploy-fast dev-t3-debian11-01-${CI_COMMIT_BRANCH,,} --options=base_branch:$BASE_BRANCH -vvv
